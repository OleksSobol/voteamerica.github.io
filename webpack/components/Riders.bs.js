// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Table$VoteUSReason = require("./Table.bs.js");

var component = ReasonReact.statelessComponent("Riders");

var tableType = "riders";

var riderTableCol1 = {
  Header: "First Name",
  accessor: "RiderFirstName"
};

var riderTableCol2 = {
  Header: "Email",
  accessor: "RiderEmail"
};

var riderTableCol3 = {
  Header: "Last Name",
  accessor: "RiderLastName"
};

var riderTableColumns = /* array */[
  riderTableCol1,
  riderTableCol2,
  riderTableCol3
];

function make(loginInfo, apiInfo, ridersInfo, getRidersList, hideRidersList, showCurrentRider, hideCurrentRider, _) {
  var ridersTdPropsHandler = function (_, rowInfoOption, _$1, _$2) {
    return {
            onClick: (function (_, handleOriginalOption) {
                if (rowInfoOption !== undefined) {
                  var rowInfo = Js_primitive.valFromOption(rowInfoOption);
                  console.log(rowInfo);
                  var sr = function (fx,riderDetails){{ fx(riderDetails); return 0; }};
                  var currentRiderFirstName = rowInfo.original.RiderFirstName;
                  var currentRider = {
                    RiderFirstName: currentRiderFirstName,
                    RiderEmail: rowInfo.original.RiderEmail,
                    RiderLastName: rowInfo.original.RiderLastName
                  };
                  sr(showCurrentRider, Js_primitive.some(currentRider));
                } else {
                  Curry._1(hideCurrentRider, /* () */0);
                }
                if (handleOriginalOption !== undefined) {
                  Curry._1(handleOriginalOption, /* () */0);
                }
                return /* () */0;
              })
          };
  };
  var handleGetRidersListClick = function () {
    var token = loginInfo.token;
    var url = apiInfo.apiUrl;
    var gl = function (fx,url,token){{ fx(url, token); return 0; }};
    gl(getRidersList, url, token);
    return /* () */0;
  };
  var handleHideDriversListClick = function () {
    Curry._1(hideRidersList, /* () */0);
    return /* () */0;
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var tableRider = function (riderDetails) {
                return {
                        RiderFirstName: riderDetails.RiderFirstName,
                        RiderEmail: riderDetails.RiderEmail,
                        RiderLastName: riderDetails.RiderLastName
                      };
              };
              var tableRiders = $$Array.map(tableRider, ridersInfo.riders);
              var tableDivStyle = {
                marginTop: "20px",
                marginBottom: "10px"
              };
              var currentRiderInfo = function (currentRider) {
                return React.createElement("div", undefined, React.createElement("h3", undefined, "Current rider info:"), React.createElement("div", undefined, currentRider.RiderFirstName + (" " + currentRider.RiderLastName)), React.createElement("div", undefined, currentRider.RiderEmail));
              };
              var tableRidersJSX;
              if (ridersInfo.showRidersList) {
                var match = ridersInfo.showCurrentRiderDetails;
                tableRidersJSX = React.createElement("div", undefined, React.createElement("button", {
                          className: "button button--large",
                          id: "hideGetRidersList",
                          onClick: handleHideDriversListClick
                        }, "Hide List"), React.createElement("div", {
                          style: tableDivStyle
                        }, ReasonReact.element(undefined, undefined, Table$VoteUSReason.make((function (prim, prim$1, prim$2, prim$3, prim$4, prim$5) {
                                    return {
                                            className: prim,
                                            type: prim$1,
                                            columns: prim$2,
                                            defaultPageSize: prim$3,
                                            data: prim$4,
                                            getTdProps: prim$5
                                          };
                                  }), "basicRiderTable", tableType, riderTableColumns, tableRiders, ridersTdPropsHandler, /* array */[]))), match ? currentRiderInfo(ridersInfo.currentRider) : React.createElement("div", undefined, "No rider selected"));
              } else {
                tableRidersJSX = React.createElement("div", undefined, React.createElement("button", {
                          className: "button button--large",
                          id: "showGetRidersList",
                          onClick: handleGetRidersListClick
                        }, "Show Riders List"));
              }
              var ridersInfoArea = loginInfo.loggedIn ? React.createElement("div", undefined, React.createElement("h2", {
                          className: "operator-page-heading"
                        }, "Rider Info"), React.createElement("div", undefined, tableRidersJSX)) : null;
              return React.createElement("div", undefined, ridersInfoArea);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.loginInfo, jsProps.apiInfo, jsProps.ridersInfo, jsProps.getRidersList, jsProps.hideRidersList, jsProps.showCurrentRider, jsProps.hideCurrentRider, /* array */[]);
      }));

exports.component = component;
exports.tableType = tableType;
exports.riderTableCol1 = riderTableCol1;
exports.riderTableCol2 = riderTableCol2;
exports.riderTableCol3 = riderTableCol3;
exports.riderTableColumns = riderTableColumns;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
